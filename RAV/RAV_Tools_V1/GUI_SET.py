# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'GUI_SET.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QImage, QPixmap, QPalette, QPainter

from GUI_RUN import*
from pypylon import pylon
import numpy as np
import cv2 as cv


class Ui_MainWindow_SET(object):

    #define go to window_RUN when button btn_go_to_mode_run pressed
    def window_RUN(self):
        self.window = QtWidgets.QMainWindow()
        self.ui = Ui_MainWindow_RUN()
        self.ui.setupUi_RUN(self.window)
        self.window.show()
      
    def camera_init(self):
        self.camera = pylon.InstantCamera(pylon.TlFactory.GetInstance().CreateFirstDevice())
         # Start reading image
        self.camera.StartGrabbing(pylon.GrabStrategy_LatestImageOnly)
        self.converter = pylon.ImageFormatConverter()
         # Convert to OpenCV's BGR color format
        self.converter.OutputPixelFormat = pylon.PixelType_BGR8packed
        self.converter.OutputBitAlignment = pylon.OutputBitAlignment_MsbAligned
    def camera_show(self):
        while camera.IsGrabbing():
            grabResult = self.camera.RetrieveResult(5000, pylon.TimeoutHandling_ThrowException)
         
            if self.grabResult.GrabSucceeded():
                # Convert to OpenCV image format
                image = self.converter.Convert(grabResult)
                img = self.image.GetArray()
                self.cv.namedWindow('title', cv.WINDOW_NORMAL)
                self.cv.imshow('title', img)
            self.grabResult.Release()

    def camera_exit(self):
        self.camera.StopGrabbing()
        self.cv.destroyAllWindows()


    def setupUi_SET(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1060, 904)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        self.are_camera = QtWidgets.QScrollArea(self.centralwidget)
        self.are_camera.setGeometry(QtCore.QRect(0, 140, 781, 731))
        self.are_camera.setWidgetResizable(True)
        self.are_camera.setObjectName("are_camera")



        self.label = QtGui.QLabel(Dialog)
        self.label.setGeometry(QtCore.QRect(10, 31, 391, 311))
        self.label.setText(_fromUtf8(""))
        self.label.setObjectName(_fromUtf8("label"))



        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 779, 729))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        #self.are_camera.setWidget(self.scrollAreaWidgetContents)

        self.btn_Ref_Image = QtWidgets.QPushButton(self.centralwidget)
        self.btn_Ref_Image.setGeometry(QtCore.QRect(0, 0, 91, 61))
        self.btn_Ref_Image.setObjectName("btn_Ref_Image")
        self.btn_set_IO = QtWidgets.QPushButton(self.centralwidget)
        self.btn_set_IO.setGeometry(QtCore.QRect(100, 0, 91, 61))
        self.btn_set_IO.setObjectName("btn_set_IO")
        self.btn_set_camera = QtWidgets.QPushButton(self.centralwidget)
        self.btn_set_camera.setGeometry(QtCore.QRect(200, 0, 111, 61))
        self.btn_set_camera.setCursor(QtGui.QCursor(QtCore.Qt.SizeVerCursor))
        self.btn_set_camera.setObjectName("btn_set_camera")
        self.btn_run = QtWidgets.QPushButton(self.centralwidget)
        self.btn_run.setGeometry(QtCore.QRect(920, 800, 121, 61))
        self.btn_run.setObjectName("btn_run")
        self.btn_stop = QtWidgets.QPushButton(self.centralwidget)
        self.btn_stop.setGeometry(QtCore.QRect(790, 800, 121, 61))
        self.btn_stop.setObjectName("btn_stop")

        self.btn_go_to_mode_run = QtWidgets.QPushButton(self.centralwidget)
        self.btn_go_to_mode_run.setGeometry(QtCore.QRect(780, 0, 121, 61))
        self.btn_go_to_mode_run.setObjectName("btn_go_to_mode_run")
        #go to window_RUN when button btn_go_to_mode_set pressed
        self.btn_go_to_mode_run.clicked.connect(self.window_RUN)

        self.label_OK_NG = QtWidgets.QLabel(self.centralwidget)
        self.label_OK_NG.setGeometry(QtCore.QRect(910, 0, 131, 61))
        self.label_OK_NG.setScaledContents(False)
        self.label_OK_NG.setAlignment(QtCore.Qt.AlignCenter)
        self.label_OK_NG.setObjectName("label_OK_NG")
        self.btn_add_tool = QtWidgets.QPushButton(self.centralwidget)
        self.btn_add_tool.setGeometry(QtCore.QRect(0, 70, 91, 61))
        self.btn_add_tool.setObjectName("btn_add_tool")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1060, 20))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionSave = QtWidgets.QAction(MainWindow)
        self.actionSave.setObjectName("actionSave")
        self.actionExport = QtWidgets.QAction(MainWindow)
        self.actionExport.setObjectName("actionExport")
        self.actionExit = QtWidgets.QAction(MainWindow)
        self.actionExit.setObjectName("actionExit")
        self.menuFile.addAction(self.actionSave)
        self.menuFile.addAction(self.actionExport)
        self.menuFile.addAction(self.actionExit)
        self.menubar.addAction(self.menuFile.menuAction())


        self.are_camera.setBackgroundRole(QPalette.Dark)
        #self.are_camera.setWidget(self.viewCam)



        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.btn_Ref_Image.setText(_translate("MainWindow", "Ref Image"))
        self.btn_set_IO.setText(_translate("MainWindow", "Setting I/O"))
        self.btn_set_camera.setText(_translate("MainWindow", "Setting  Camera"))
        self.btn_run.setText(_translate("MainWindow", "RUN"))
        self.btn_stop.setText(_translate("MainWindow", "STOP"))
        self.btn_go_to_mode_run.setText(_translate("MainWindow", "GO TO MODE RUN"))
        self.label_OK_NG.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:36pt; color:#00ff00;\">OK</span></p></body></html>"))
        self.btn_add_tool.setText(_translate("MainWindow", "Add Tool"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.actionSave.setText(_translate("MainWindow", "Save"))
        self.actionExport.setText(_translate("MainWindow", "Export"))
        self.actionExit.setText(_translate("MainWindow", "Exit"))



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow_SET()
    ui.setupUi_SET(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
